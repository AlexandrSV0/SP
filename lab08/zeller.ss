;zeller.ss
(define (day-of-week)
 (zeller dd
      (+ 10(cond ((or(< mm 2)(= mm 2)) mm) (#t (- mm 12))))
      (remainder (+ 1(cond((< mm 3) (- yyyy 2))(#t (- yyyy 1))))
                 100)
      (quotient (cond((not(< 2 mm))(- yyyy 1))(#t yyyy))
                100)
 )
)
(define (zeller d m y c)
 (neg-to-pos (remainder (+ d y
                          (quotient (-(* 26 m)2) 10)
                          (quotient y 4)
                          (quotient c 4)
                          (* 2(- c))
                       )
            7)
 )
)
(define (neg-to-pos d)
 (cond((< d 0)(+ d 7))
      (#t d)
 )
)
(define (birthday dw)
;                  ^{0,...,6}
 (display "Aleksandr Semin was born on ")
     (cond((= dw 1) (display "Monday ") 1)
          ((= dw 2) (display "Tuesday ") 2)
          ((= dw 3) (display "Wednesday ") 3)
          ((= dw 4) (display "Thursday ") 4)
          ((= dw 5) (display "Friday ") 5)
          ((= dw 6) (display "Saturday ") 6)          
          (#t (display "Sunday ") 7)
     )
  (display dd)(display ".")
  (display mm)(display ".")
 yyyy
)
(define dd 23)
(define mm 09)
(define yyyy 2002)
(birthday (day-of-week))
